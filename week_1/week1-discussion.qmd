---
title: "week1-discussion"
format: html
---


Notes: 

What is the answer to that question 
What is the question being answered by figure 
What is the answer to that question

Why does clarity and aesthetic matter>
- Communication
- Reproducibility
- Collaboration
- Backtracking
- Troubleshooting
- Note taking
*take notes every line 
*if you dont code clearly people will think you dont think clearly 

```{r}
install.packages("janitor")
install.packages("usdata")
install.packages("tidyverse")
install.packages("readr")

library(janitor)
library(usdata)
library(tidyverse)
library(readr)

```

```{r}
fracking <- read_csv("data/fracking.csv")
view(fracking)
```

```{r}
fracking_clean <- fracking %>%
  
  #clean column names
  janitor::clean_names() |> #turn column names into snake case "_". better readability of column headers
  
  # clean up dates ----
  mutate(job_start_date = str_remove(job_start_date, " AM")) |> # remove string "AM" from the job_start_date column cells 
  mutate(datetime_start = mdy_hms(job_start_date)) |> #create a new column "datetime_start". Input job start date
  mutate(year = year(datetime_start)) %>% #create a new column "year". Pull out datetime_start year 
  
  select(datetime_start, year, state_name, county_name, well_name, total_base_water_volume) %>% #isolate columns listed to refer to fracking_clean
  filter(!state_name %in% c("Beaver", "Beckham", "Harper", "Hemphill", "Midland", "Red River", "Roosevelt", "Rusk", "State", "WARD")) %>% #remove the lsited rows in the state_name column
  rename(sn = state_name) %>%  #rename state_name column to sn 
  mutate(sn = str_to_title(sn)) %>% #creates a new column with sn string converts it to title case 
  mutate(sn = case_when(
    sn == "Colordao" ~ "Colorado",
    sn == "Loiusiana" ~ "Louisiana",
    sn == "Louisianna" ~ "Louisiana",
    sn == "Lousiana" ~ "Louisiana",
    sn == "New Mexcio" ~ "New Mexico",
    sn == "Norh Dakota" ~ "North Dakota",
    sn == "Norht Dakota" ~ "North Dakota",
    sn == "North  Dakota" ~ "North Dakota",
    sn == "North Dakata" ~ "North Dakota",
    sn == "North Dakotta" ~ "North Dakota",
    sn == "Noth Dakota" ~ "North Dakota",
    sn == "Pennslvania" ~ "Pennsylvania",
    sn == "Pennsylavania" ~ "Pennsylvania",
    sn == "Pennsylvanya" ~ "Pennsylvania",
    sn == "Penssylvania" ~ "Pennsylvania",
    sn == "Texasa" ~ "Texas",
    sn == "Texs" ~ "Texas", 
    sn == "West Viginia" ~ "West Virginia",
    sn == "Wyominng" ~ "Wyoming", 
    TRUE ~ sn # copy over rest of state names from as-is
  )) %>%
  
  
  # remove rows that have a '?' mark ----
  filter(!str_detect(string = sn, pattern = "\\?")) |> # `?` is a special chr; escape with `\\` prefix
  
  # make all uppercase (so that we can covert abbreviation to state names) ----
  mutate(sn = str_to_upper(sn)) |> 
  
  # mutate abbreviations to full state names ----
  mutate(sn = ifelse(test = str_length(sn) == 2, # if string in 'sn' col is 2 chrs long
                     yes = usdata::abbr2state(sn), # replace abbreviation with full state name 
                     no = sn)) |> # if string in 'sn' col is not 2 chrs long, keep state name as-is
  
  # make all words title case again ----
  mutate(sn = str_to_title(sn)) |> 
  
  # create a column of just state abbreviations ----
  mutate(state_abb = usdata::state2abbr(sn)) |> 
  
  # rename 'sn' to 'state_name' again for clarity ----
  rename(state_name = sn, total_base_water_volume_gal = total_base_water_volume) |> 
  
  # move 'state_abb' col after state_name col ----
  relocate(state_abb, .after = state_name) |> 
  
  # convert 'state_name' & 'state_abb' from string to factor ----
  mutate(state_name = as.factor(state_name),
         state_abb = as.factor(state_abb)) |> 
  
   # remove obs that don't have a measurement for 'total_base_water_volume' (NA) ----
  drop_na(total_base_water_volume_gal)

  

view(fracking_clean)
  
```



```{r}

fracking_clean |> 
  filter(state_name %in% c("Texas", "Colorado", "North Dakota")) |> 
  filter(year == 2015) |> 
  group_by(state_name) |> # pipe directly into ggplot
  ggplot(aes(x = fct_rev(fct_infreq(state_name)), y = total_base_water_volume_gal)) + # need to reverse fct order for coord_flip() (plots lowest freq at top by default)
  geom_jitter(width = 0.3, alpha = 0.5, color = "gray15") +
  geom_violin(color = "red4", alpha = 0.3) +
  scale_y_continuous(labels = scales::label_comma()) +
  labs(y = "Total base water volumn (gal)") +
  coord_flip() +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()

```


questions to be ansered?? 

- how much water is used in each state, 
  - texas
how is distributed 
- colorado most evenly distributed 


- where violin plot is widest is where most of the data is 




